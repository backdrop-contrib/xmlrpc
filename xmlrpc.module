<?php

/**
 * @file
 * Enables XML-RPC functionality.
 */

/**
 * Implements hook_config_info().
 */
function xmlrpc_config_info() {
  $prefixes['xmlrpc.settings'] = array(
    'label' => t('XML-RPC settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_menu().
 */
function xmlrpc_menu() {
  $items['xmlrpc.php'] = array(
    'title' => 'XML-RPC',
    'page callback' => 'xmlrpc_server_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/xmlrpc.server.inc',
  );
  return $items;
}

/**
 * Performs one or more XML-RPC request(s).
 *
 * Usage example:
 * @code
 * $result = xmlrpc('http://example.com/xmlrpc.php', array(
 *   'service.methodName' => array($parameter, $second, $third),
 * ));
 * @endcode
 *
 * @param $url
 *   An absolute URL of the XML-RPC endpoint.
 * @param $args
 *   An associative array whose keys are the methods to call and whose values
 *   are the arguments to pass to the respective method. If multiple methods
 *   are specified, a system.multicall is performed.
 * @param $options
 *   (optional) An array of options to pass along to drupal_http_request().
 *
 * @return
 *   For one request:
 *     Either the return value of the method on success, or FALSE.
 *     If FALSE is returned, see xmlrpc_errno() and xmlrpc_error_msg().
 *   For multiple requests:
 *     An array of results. Each result will either be the result
 *     returned by the method called, or an xmlrpc_error object if the call
 *     failed. See xmlrpc_error().
 */
function xmlrpc($url, $args, $options = array()) {
  module_load_include('inc', 'xmlrpc', 'includes/xmlrpc');
  return _xmlrpc($url, $args, $options);
}
